{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "./apps",
  "projects": {
    "core-data-plugin-native-http": {
      "root": "libs/core/data/plugin/native-http",
      "sourceRoot": "libs/core/data/plugin/native-http/src",
      "projectType": "library",
      "architect": {
        "build": {
          "builder": "@nrwl/webpack:webpack",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/libs/core/data/plugin/native-http",
            "main": "libs/core/data/plugin/native-http/src/index.ts",
            "tsConfig": "libs/core/data/plugin/native-http/tsconfig.lib.json",
            "assets": []
          }
        },
        "publish": {
          "builder": "nx:run-commands",
          "options": {
            "command": "node tools/scripts/publish.mjs core-data-plugin-native-http {args.ver} {args.tag}"
          },
          "dependsOn": ["build"]
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["libs/core/data/plugin/native-http/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
          "options": {
            "jestConfig": "libs/core/data/plugin/native-http/jest.config.ts",
            "passWithNoTests": true
          }
        }
      },
      "tags": []
    },
    "my-app": {
      "projectType": "application",
      "schematics": {
        "@schematics/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/my-app",
      "sourceRoot": "apps/my-app/src",
      "prefix": "app",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/my-app",
            "index": "apps/my-app/src/index.html",
            "main": "apps/my-app/src/main.ts",
            "polyfills": ["zone.js"],
            "tsConfig": "apps/my-app/tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              "apps/my-app/src/favicon.ico",
              "apps/my-app/src/assets",
              {
                "glob": "**/*.svg",
                "input": "node_modules/ionicons/dist/ionicons/svg",
                "output": "./svg"
              }
            ],
            "styles": [
              "apps/my-app/src/theme/variables.scss",
              "apps/my-app/src/global.scss"
            ],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/my-app/src/environments/environment.ts",
                  "with": "apps/my-app/src/environments/environment.prod.ts"
                }
              ],
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "1mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kb",
                  "maximumError": "4kb"
                }
              ],
              "outputHashing": "all"
            },
            "preproduction": {
              "fileReplacements": [
                {
                  "replace": "apps/my-app/src/environments/environment.ts",
                  "with": "apps/my-app/src/environments/environment.pre.ts"
                }
              ],
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            },
            "development": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "browserTarget": "my-app:build:production"
            },
            "preproduction": {
              "browserTarget": "my-app:build:preproduction"
            },
            "development": {
              "browserTarget": "my-app:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "my-app:build"
          }
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "polyfills": ["zone.js", "zone.js/testing"],
            "tsConfig": "apps/my-app/tsconfig.spec.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              "apps/my-app/src/favicon.ico",
              "apps/my-app/src/assets",
              {
                "glob": "**/*.svg",
                "input": "node_modules/ionicons/dist/ionicons/svg",
                "output": "./svg"
              }
            ],
            "styles": ["apps/my-app/src/styles.scss"],
            "scripts": []
          }
        },
        "ionic-cordova-serve": {
          "builder": "@ionic/angular-toolkit:cordova-serve",
          "options": {
            "cordovaBuildTarget": "my-app:ionic-cordova-build",
            "devServerTarget": "my-app:serve"
          },
          "configurations": {
            "production": {
              "cordovaBuildTarget": "my-app:ionic-cordova-build:production",
              "devServerTarget": "my-app:serve:production"
            }
          }
        },
        "ionic-cordova-build": {
          "builder": "@ionic/angular-toolkit:cordova-build",
          "options": {
            "browserTarget": "my-app:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "my-app:build:production"
            }
          }
        }
      }
    }
  }
}
